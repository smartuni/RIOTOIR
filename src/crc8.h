/**
 * \file
 * Functions and types for CRC-8-bit checks.
 *
 * Algorithm (bit-by-bit-fast) generated by pycrc v0.9.1, https://pycrc.org
 *
 */
#ifndef CRC8_H
#define CRC8_H

#include <stdlib.h>
#include <stdint.h>
#include <stdbool.h>

#ifdef __cplusplus
extern "C" {
#endif


/**
 * Calculate the crc value with new data.
 *
 * \param[in] data     Pointer to a buffer of \a data_len bytes.
 * \param[in] data_len Number of bytes in the \a data buffer.
 * \return             The crc 8 bit value.
 */
uint8_t getCRC8( const uint8_t* data, size_t data_len );

/**
 * Calculate the crc value for the new data and checks the equality with the delivered crc value.
 *
 * \param[in] crcToCheck crc-8-bit value to check with the new data crc.
 * \param[in] data       Pointer to a buffer of \a data_len bytes.
 * \param[in] data_len   Number of bytes in the \a data buffer.
 * \return               true, when the crc value are equal.
 */
bool checkCRC8( const uint8_t crcToCheck, const uint8_t* data, size_t data_len );


#ifdef __cplusplus
}           /* closing brace for extern "C" */
#endif

#endif      /* CRC8_H */

